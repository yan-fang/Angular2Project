{"version":3,"sources":["calendar-factory.js","calendar.js","../../../../../../../../../../module-insertRequire.js"],"names":["define","moment","DATE_FORMAT","CALENDAR_FORMAT","factory","services","getInlineOptions","options","today","currentDate","toDate","setHours","minDate","dayDecorators","date","decorator","cssClass","subLabel","dueDate","enabledDates","_","map","dateString","length","Date","maxDate","setDate","getDate","startingDate","getDayDecorator","dateObject","dateToCheck","i","selected","isDateDisabled","theDate","getTime","index","customClass","format_day_title","placement","calendar_format","min_date","max_date","starting_day","defaultCalendarFormat","angular","calendarFactory","module","require"],"mappings":"AAAAA,OAAA,2BAAA,SAAA,UACA,SAAAC,GACA,YAEA,IAAAC,GAAA,aACAC,EAAA,eAGAC,EAAA,WACA,GAAAC,KAiIA,OAlHAA,GAAAC,iBAAA,SAAAC,GACAA,IACAA,KAEA,IAAAC,EACAD,GAAAE,cACAD,EAAAP,EAAAM,EAAAE,YAAAP,GAAAQ,SAAAC,SAAA,EAAA,EAAA,EAAA,GAEA,IAoBAC,GApBAC,IAEAC,KAAAN,EACAO,WACAC,SAAA,GACAC,SAAA,WAIAH,KAAAb,EAAAM,EAAAW,QAAAhB,GAAAQ,SAAAC,SAAA,EAAA,EAAA,EAAA,GACAI,WACAC,SAAA,UACAC,SAAA,SAIAE,EAAAC,EAAAC,IAAAd,EAAAY,aAAA,SAAAG,GACA,MAAArB,GAAAqB,EAAApB,GAAAQ,SAAAC,SAAA,EAAA,EAAA,IAKAJ,GAAAK,QACAA,EAAAX,EAAAM,EAAAK,QAAAV,GAAAQ,SACAS,EAAAI,OAAA,EACAX,EAAA,GAAAY,MAAAL,EAAA,IACAX,EACAI,EAAA,GAAAY,MAAAhB,IAEAI,EAAA,GAAAY,MACAZ,EAAAD,SAAA,EAAA,EAAA,EAAA,GAGA,IAAAc,EACAN,GAAAI,OAAA,EACAE,EAAA,GAAAD,MAAAL,EAAAA,EAAAI,OAAA,IACAhB,EAAAkB,QACAA,EAAAxB,EAAAM,EAAAkB,QAAAvB,GAAAQ,SACAF,GACAiB,EAAA,GAAAD,MAAAhB,GACAiB,EAAAd,SAAA,EAAA,EAAA,EAAA,GACAc,EAAAC,QAAAD,EAAAE,UAAA,OAEAF,EAAA,GAAAD,MACAC,EAAAd,SAAA,EAAA,EAAA,EAAA,GACAc,EAAAC,QAAAd,EAAAe,UAAA,KAGA,IAAAC,EAEAA,GADArB,EAAAqB,aACA3B,EAAAM,EAAAqB,aAAA1B,GAAAQ,SAEAE,CAGA,IAAAiB,GAAA,SAAAC,GAGA,IAAA,GAFAC,GAAA,GAAAP,MAAAM,EAAAhB,MAAAH,SAAA,EAAA,EAAA,EAAA,GACAI,GAAAC,SAAA,GAAAC,SAAA,IACAe,EAAA,EAAAA,EAAAnB,EAAAU,OAAAS,IACA,GAAAD,IAAAlB,EAAAmB,GAAAlB,KAAA,CACAC,EAAAF,EAAAmB,GAAAjB,SACA,OAUA,MAPAe,GAAAG,WACAlB,GAAAC,SAAA,GAAAC,SAAA,QAGAV,EAAAsB,kBACAd,EAAAR,EAAAsB,gBAAAC,IAEAf,GAGAmB,EAAA,SAAApB,GACA,GAAAqB,GAAA,GAAAX,MAAAV,GAAAH,SAAA,EAAA,EAAA,EAAA,EACA,IAAAwB,EAAAvB,EAAAwB,WAAAD,EAAAV,EAAAW,UACA,OAAA,CAGA,KAAAjB,GAAA,IAAAA,EAAAI,OACA,OAAA,CAGA,KAAA,GAAAc,GAAA,EAAAA,EAAAlB,EAAAI,OAAAc,IACA,GAAAlB,EAAAkB,KAAAF,EACA,OAAA,CAGA,QAAA,EAGA,QACAG,YAAAT,EACAU,iBAAA,YACAC,UAAA,iBACAC,gBAAAtC,EACA+B,eAAAA,EACAQ,SAAA9B,EACA+B,SAAAlB,EACAmB,aAAAhB,IAIAvB,EAAAwC,sBAAA1C,EAEAE,EAEA,OAAAD,KAIAJ,OAAA,oBAAA,UC/IA,2BAEA,SAAA8C,EAAAC,GACA,YAEA,OAAAD,GAAAE,OAAA,6BACA5C,QAAA,0BAAA2C,KCNAE,SAAA","file":"calendar.js","sourcesContent":["define('AutoLoanCalendarFactory',['moment', 'lodash'],\n  function(moment) {\n    'use strict';\n\n    var DATE_FORMAT = 'YYYY-MM-DD';\n    var CALENDAR_FORMAT = 'MMM DD, YYYY';\n\n\n    var factory = function() {\n      var services = {};\n\n      /**\n       *\n       * @param options valid options are\n       *                currentDate: today date string in YYYY-MM-DD format\n       *                minDate: min date string in YYYY-MM-DD format\n       *                maxDate: max date string in YYYY-MM-DD format\n       *                dueDate: due date string in YYYY-MM-DD\n       *                enabledDates: list of dates that are enabled in YYYY-MM-DD format\n       *                getDayDecorator: a function to extend day decorator if needed\n       *\n       * @returns {{customClass: getDayDecorator, format_day_title: string, placement: string, calendar_format: string,\n       * isDateDisabled: isDateDisabled, min_date: Date, max_date: Date}}\n       */\n      services.getInlineOptions = function(options) {\n        if (!options) {\n          options = {};\n        }\n        var today;\n        if (options.currentDate) {\n          today = moment(options.currentDate, DATE_FORMAT).toDate().setHours(0,0,0,0);\n        }\n        var dayDecorators = [\n          {\n            date: today,\n            decorator: {\n              cssClass: '',\n              subLabel: 'TODAY'\n            }\n          },\n          {\n            date: moment(options.dueDate, DATE_FORMAT).toDate().setHours(0, 0, 0, 0),\n            decorator: {\n              cssClass: 'due-day',\n              subLabel: 'DUE'\n            }\n          }];\n\n        var enabledDates = _.map(options.enabledDates, function(dateString) {\n          return moment(dateString, DATE_FORMAT).toDate().setHours(0.0, 0, 0);\n        });\n\n        var minDate;\n\n        if (options.minDate) {\n          minDate = moment(options.minDate, DATE_FORMAT).toDate();\n        } else if (enabledDates.length > 0) {\n          minDate = new Date(enabledDates[0]);\n        } else if (today) {\n          minDate = new Date(today);\n        } else {\n          minDate = new Date();\n          minDate.setHours(0,0,0,0);\n        }\n\n        var maxDate;\n        if (enabledDates.length > 0) {\n          maxDate = new Date(enabledDates[enabledDates.length - 1]);\n        } else if (options.maxDate) {\n          maxDate = moment(options.maxDate, DATE_FORMAT).toDate();\n        } else if (today) {\n          maxDate = new Date(today);\n          maxDate.setHours(0, 0, 0, 0);\n          maxDate.setDate(maxDate.getDate() + 180);\n        } else {\n          maxDate = new Date();\n          maxDate.setHours(0, 0, 0, 0);\n          maxDate.setDate(minDate.getDate() + 180);\n        }\n\n        var startingDate;\n        if (options.startingDate) {\n          startingDate = moment(options.startingDate, DATE_FORMAT).toDate();\n        } else {\n          startingDate = minDate;\n        }\n\n        var getDayDecorator = function(dateObject) {\n          var dateToCheck = new Date(dateObject.date).setHours(0, 0, 0, 0);\n          var decorator = {cssClass: '', subLabel: ''};\n          for (var i = 0; i < dayDecorators.length; i++) {\n            if (dateToCheck === dayDecorators[i].date) {\n              decorator = dayDecorators[i].decorator;\n              break;\n            }\n          }\n          if (dateObject.selected) {\n            decorator = {cssClass: '', subLabel: 'PAY'};\n          }\n\n          if (options.getDayDecorator) {\n            decorator = options.getDayDecorator(dateObject);\n          }\n          return decorator;\n        };\n\n        var isDateDisabled = function(date) {\n          var theDate = new Date(date).setHours(0, 0, 0, 0);\n          if (theDate < minDate.getTime() || theDate > maxDate.getTime()) {\n            return true;\n          }\n\n          if (!enabledDates || enabledDates.length === 0) {\n            return false;\n          }\n\n          for (var index = 0; index < enabledDates.length; index++) {\n            if (enabledDates[index] === theDate) {\n              return false;\n            }\n          }\n          return true;\n        };\n\n        return {\n          'customClass': getDayDecorator,\n          'format_day_title': 'MMMM YYYY',\n          'placement': 'auto top-right',\n          'calendar_format': CALENDAR_FORMAT,\n          'isDateDisabled': isDateDisabled,\n          'min_date': minDate,\n          'max_date': maxDate,\n          'starting_day' :startingDate\n        };\n      };\n\n      services.defaultCalendarFormat = CALENDAR_FORMAT;\n\n      return services;\n    };\n    return factory;\n  }\n);\n\n","define('AutoLoanCalendar',['angular',\n        'AutoLoanCalendarFactory'],\n\n  function(angular, calendarFactory) {\n    'use strict';\n\n    return angular.module('AutoLoanCalendarModule',[])\n      .factory('AutoLoanCalendarFactory', calendarFactory);\n  });\n\n","\nrequire([\"AutoLoanCalendar\"]);\n"]}